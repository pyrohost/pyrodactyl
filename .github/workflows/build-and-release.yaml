name: Docker Build and Release Workflow

on:
  push:
    branches:
      - main
  release:
    types:
      - published

permissions:
    packages: write
    contents: write

jobs:
  build-dev:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'Update version to')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push canary image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:canary
            ghcr.io/${{ github.repository }}:dev

          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  create-release-branch:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'Bump Version')) ||
      github.event_name == 'workflow_dispatch'
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from commit message or generate
        id: extract-version
        run: |
          VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oE 'v?[0-9]+\.[0-9]+\.[0-9]+')

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Create release branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b releases/${{ steps.extract-version.outputs.version }}

      - name: Update version in config/app.php
        run: sed -i "s/'version' => '.*'/'version' => '${{ steps.extract-version.outputs.version }}'/g" config/app.php

      - name: Commit version update
        run: |
          git add config/app.php
          git commit -m "Update version to ${{ steps.extract-version.outputs.version }}"

      - name: Push release branch
        run: git push origin releases/${{ steps.extract-version.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.extract-version.outputs.version }}
          target_commitish: releases/${{ steps.extract-version.outputs.version }}
          generate_release_notes: true
          draft: false
          prerelease: false
